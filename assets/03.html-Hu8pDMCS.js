import{_ as o}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as l,o as d,c as r,a as n,b as e,d as t,w as s,e as i}from"./app-_417akz0.js";const c={},h=n("h2",{id:"_1-when-to-use-examples",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-when-to-use-examples","aria-hidden":"true"},"#"),e(" 1 When To Use Examples")],-1),u=i('<ul><li>User Manuals</li><li>API Documentation</li><li>Tutorials</li><li>Knowledge Based Articles</li><li>Troubleshooting Guides</li><li>Software Design Documents</li><li>Technical Specifications</li></ul><p>When in doubt on whether or not to include examples in your content, consider the following questions:</p><ul><li>Is my documentation describing an action? If so, you may want to include and example of that action.</li><li>Is my audience familiar with the context of my content? Is not, that may be extra motivation to include an example.</li></ul><h2 id="_2-how-to-use-complete-examples" tabindex="-1"><a class="header-anchor" href="#_2-how-to-use-complete-examples" aria-hidden="true">#</a> 2 How to Use Complete Examples</h2><h3 id="_2-1-understand-the-audience-and-scope" tabindex="-1"><a class="header-anchor" href="#_2-1-understand-the-audience-and-scope" aria-hidden="true">#</a> 2.1 Understand the audience and scope</h3><p>As discussed earlier, identifying the audience and scope is key to determining the need for examples. This also gives context to how descriptive or complex the examples should be to meet the needs.</p><h3 id="_2-2-be-specific" tabindex="-1"><a class="header-anchor" href="#_2-2-be-specific" aria-hidden="true">#</a> 2.2 Be Specific</h3><p>Examples should clearly demonstrate the idea, showing exactly how something is used. If there is more than one way to accomplish something that you are conveying with an example, consider adding descriptions to discuss the different options or creating multiple examples to show all relevant uses.</p><h3 id="_2-3-use-concise-examples" tabindex="-1"><a class="header-anchor" href="#_2-3-use-concise-examples" aria-hidden="true">#</a> 2.3 Use Concise Examples</h3>',9),p=n("code",null,"...",-1),m=i(`<p>For example, I may explain the way to download the node dependencies to build this training content locally and show the following:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span>
<span class="token builtin class-name">.</span> <span class="token builtin class-name">.</span> <span class="token builtin class-name">.</span>
added <span class="token number">630</span> packages, and audited <span class="token number">631</span> packages <span class="token keyword">in</span> 7s

<span class="token number">126</span> packages are looking <span class="token keyword">for</span> funding
  run <span class="token variable"><span class="token variable">\`</span><span class="token function">npm</span> fund<span class="token variable">\`</span></span> <span class="token keyword">for</span> details

found <span class="token number">0</span> vulnerabilities
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-4-use-realistic-scenarios" tabindex="-1"><a class="header-anchor" href="#_2-4-use-realistic-scenarios" aria-hidden="true">#</a> 2.4 Use Realistic Scenarios</h3><p>Examples should be realistic! Show situations that the user will actually experience. This will make it relatable and understandable.</p><div class="hint-container note"><p class="hint-container-title">Use this training as an example!</p><p>This training content uses examples throughout the sections to show you, the participant, what the ideas look like in practice. Use this content as an example for using examples!</p></div><h3 id="_2-5-include-necessary-context" tabindex="-1"><a class="header-anchor" href="#_2-5-include-necessary-context" aria-hidden="true">#</a> 2.5 Include Necessary Context</h3><p>Make sure the reader has all the information they need to understand the example. This might include explaining the problem the example solves, or any prerequisites needed to understand the example.</p><h2 id="_3-put-it-in-practice" tabindex="-1"><a class="header-anchor" href="#_3-put-it-in-practice" aria-hidden="true">#</a> 3 Put it in Practice!</h2><p>Determine what elements are complete or incomplete from the following examples:</p><h4 id="example-1" tabindex="-1"><a class="header-anchor" href="#example-1" aria-hidden="true">#</a> Example 1</h4><p>To list all files in a directory, use the <code>ls</code> command.</p><h4 id="example-2" tabindex="-1"><a class="header-anchor" href="#example-2" aria-hidden="true">#</a> Example 2</h4><p>To list all files in a directory, open your command line interface. Navigate to the directory you&#39;re interested in using the <code>cd</code> command. For example, if you want to navigate to a directory named &#39;Documents&#39;, you would type <code>cd Documents</code> and press Enter. Once you&#39;re in the desired directory, type <code>ls</code> and press Enter. You will see a list of all files and subdirectories in the current directory.</p><details class="hint-container details"><summary>Suggested Answer</summary><p>The first example is incomplete. It tells the user to use the <code>ls</code> command to list all files in a directory, but it doesn&#39;t provide any context or further instructions. It assumes the user already knows how to open the command line interface and navigate to the desired directory.</p><p>The second example is complete. It provides step-by-step instructions, starting from opening the command line interface. It explains how to navigate to the desired directory using the cd command, and then how to list all files using the ls command. This example provides all the information a user needs to list all files in a directory using this command line tool.</p><p>Remember, this is dependent on the audience and the scope. If the audience is familiar with the running commands on the command line, the first may be sufficient if just given some additional context.</p></details>`,14);function f(x,y){const a=l("RouterLink");return d(),r("div",null,[h,n("p",null,[e("Depending on the scope of the documentation you learned to identify in "),t(a,{to:"/courses/complete/02.html"},{default:s(()=>[e("the 2. Identify the Scope")]),_:1}),e(", examples may be needed for your documentation to be most effective. Types of software documentation that may aid from examples include, but are not limited to:")]),u,n("p",null,[e("Just like we learned about in the "),t(a,{to:"/courses/concise/"},{default:s(()=>[e("Be Concise Section")]),_:1}),e(", readers may be overwhelmed or confused when given information that is not relevant or useful. Only include required information to convey your point. One example of this is when writing installation instructions. A command may provide a large amount of output and then result in a success or failure message. When providing an example of the command and possible output, there is no need to include every line of output because the user may only need to know the command to run and then what the success and failure results messages look like. You can use ellipses ("),p,e(") when ommitting irrelevant information.")]),m])}const v=o(c,[["render",f],["__file","03.html.vue"]]);export{v as default};

import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as t,c as a,e as n}from"./app-_417akz0.js";const o={},i=n('<h2 id="_1-what-is-being-technically-accurate" tabindex="-1"><a class="header-anchor" href="#_1-what-is-being-technically-accurate" aria-hidden="true">#</a> 1 What is Being Technically Accurate?</h2><p>Being technically accurate is conveying correct technical information to the user. This is extremely important! This is why the reader is reading your content - they want or need to know this information. You definitely want to get it right.</p><h2 id="_2-how-to-be-technically-accurate" tabindex="-1"><a class="header-anchor" href="#_2-how-to-be-technically-accurate" aria-hidden="true">#</a> 2 How to Be Technically Accurate</h2><h3 id="_2-1-use-correct-information" tabindex="-1"><a class="header-anchor" href="#_2-1-use-correct-information" aria-hidden="true">#</a> 2.1 Use correct information</h3><p>First of all, you need to know the correct information. If you are not confident of the information, take the time to find out - whether through technical investigation, consultation with a collegue, or formal or informal training.</p><div class="hint-container caution"><p class="hint-container-title">DO NOT GUESS OR ASSUME</p><p>Do not guess or make assumptions when writing technical documentation. This hurts the user who may receive inaccurate information, and this could hurt your reputation as the author. It is best to take the time to learn what is necessary to write accurate information. If there is no time to do so, ask a boss or colleague for assistance with the task or identify a phased release plan for the content so the delivery can be accurate.</p></div><h3 id="_2-2-be-detail-oriented" tabindex="-1"><a class="header-anchor" href="#_2-2-be-detail-oriented" aria-hidden="true">#</a> 2.2 Be detail oriented</h3><p>Being precise and consistent is imperative to being accurate. This requires the writer to be detail oriented, or take the time to review the small things. Without reviewing the details, the author may overlook something small that is inaccurate, making the documentation not precise, or the author may make an update in one place that impacts something else but not update the coordinating content, making the content inconsistent.</p><div class="hint-container info"><p class="hint-container-title">Useful Strategies</p><p>Code Editors and IDEs (Integrated Developement Environments) often have powerful search and replace functionality. Search for key words, phrases, or even grammar that may reveal similar content which needs addressed during a change. This is especially relevant when you are adding to documentation of which you are not the sole author. There may be content that you do not see initially that is relevant to your changes.</p></div><h3 id="_2-3-define-technical-terms" tabindex="-1"><a class="header-anchor" href="#_2-3-define-technical-terms" aria-hidden="true">#</a> 2.3 Define technical terms</h3><p>Define technical acronyms, terms, and phrases for understanding and accuracy. Not only does this confirm that you know the information, but it gives a consistent definition for the readers to understand the content. For example, many acronyms and words have different meanings depending on the context. If not defined, readers are left to determine that for themselves and may make inaccurate assumptions or not know any meaning for the term.</p><details class="hint-container details"><summary>Examples of terms with multiple meanings</summary><p>The following terms mean something to software professionals but may mean something different to others. Most of these are well known words in both contexts, but provide examples of how easy it could be to confuse a reader if they are not aware of the context.</p><ul><li>API (Application Programming Interface): In software, this refers to a set of rules and protocols for building and interacting with software applications. It&#39;s not a general term known outside of tech.</li><li>Bug: In general usage, a bug is a small insect. In software, a bug refers to an error, flaw, or fault in a program that causes it to produce incorrect or unexpected results.</li><li>Cloud: In general, a cloud is a mass of condensed water vapor floating in the atmosphere. In tech, the cloud refers to servers that are accessed over the Internet, and the software and databases that run on those servers.</li><li>Cookie: Outside of tech, a cookie is a baked treat. In the world of web browsing, a cookie is a small piece of data stored on the user&#39;s computer by the web browser while browsing a website.</li><li>Java: Java is an island in Indonesia, but in the tech world, it&#39;s a popular programming language.</li><li>Python: In general, a python is a type of snake. In software, Python is a high-level programming language known for its readability and simplicity.</li><li>Spam: In everyday language, Spam is a brand of canned cooked pork. In the digital world, spam refers to irrelevant or inappropriate messages sent on the Internet to a large number of recipients.</li><li>Virus: In biology, a virus is a small infectious agent. In computing, a virus is a type of malicious software that, when executed, replicates itself by modifying other computer programs and inserting its own code.</li></ul></details><div class="hint-container info"><p class="hint-container-title">Example</p><p>Consider defining the term &quot;data encryption&quot; in software documentation for someone who is interested in data security. How would you do so?</p><p>Try concisely and simply stating a definition, then using a simile as useful.</p><p>Here is a suggested answer:<br> Data encryption is a security method where information is encoded into a format that can&#39;t be understood by unauthorized users. It&#39;s like turning your data into a secret code that can only be read if you have the key to decode it. This helps protect sensitive information from being accessed by hackers or other unauthorized people. When the data needs to be read, it&#39;s decrypted back into its original format. This is often used when sending information over the internet to prevent unauthorized access.</p></div><h3 id="_2-4-provide-a-glossary" tabindex="-1"><a class="header-anchor" href="#_2-4-provide-a-glossary" aria-hidden="true">#</a> 2.4 Provide a glossary</h3><p>If applicable, you can provide a glossary of terms, acronyms, or even link to additional documentation written by you or others that helps define concepts or processes such that readers can consume the information understandably and accurately.</p><h2 id="_3-put-it-in-practice" tabindex="-1"><a class="header-anchor" href="#_3-put-it-in-practice" aria-hidden="true">#</a> 3 Put it in Practice!</h2><p>Try defining &quot;API (Application Programming Interface)&quot; for a target audience of software developers. If you are not confident how to do so, spend a minute reading about or researching an API. Include appropriate detail and precision to define the term.</p><details class="hint-container details"><summary>Suggested Answer</summary><p>An API is a set of rules and protocols that specifies how software components should interact. It&#39;s like a menu in a restaurant: the menu provides a list of dishes you can order, along with a description of each dish. When you specify what menu items you want, the restaurant&#39;s kitchen does the work and provides you with some finished dishes. You don&#39;t know exactly how the restaurant prepares that food, and you don&#39;t really need to. Similarly, an API lists a bunch of operations that a programmer can use, along with a description of what they do. The programmer doesn&#39;t necessarily need to know how these operations are implemented.</p></details>',18),r=[i];function s(c,h){return t(),a("div",null,r)}const u=e(o,[["render",s],["__file","02.html.vue"]]);export{u as default};
